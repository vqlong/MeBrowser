<Window x:Class="MeBrowser.View.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MeBrowser.View"
        xmlns:converters="clr-namespace:MeBrowser.Converters"
        xmlns:vm="clr-namespace:MeBrowser.ViewModel"
        xmlns:m="clr-namespace:MeBrowser.Model"
        xmlns:cef="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes" 
        xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:tab="clr-namespace:MeBrowser.TabBrowsers"
        xmlns:h="clr-namespace:MeBrowser.Helpers"
        xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
        mc:Ignorable="d PresentationOptions"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular" 
        TextElement.FontSize="16"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto" 
        FontFamily="{DynamicResource MaterialDesignFont}"
        x:Name="main" 
        Style="{StaticResource Window.CustomTitleBarStyle}"
        DataContext="{x:Static vm:MainViewModel.Default}"
        WindowStartupLocation="CenterScreen"
        Height="789" Width="1234"
        MinWidth="400" MinHeight="400"  
        Title="{Binding ElementName=tabMain, Path=SelectedItem.Title}">
    <x:Code>
        <![CDATA[
            public MainView()
            {
                InitializeComponent();
            }
        ]]>
    </x:Code>
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding LoadData}"/>
            <b:InvokeCommandAction Command="{Binding SetTabMain}" CommandParameter="{Binding ElementName=tabMain}"/>
            <b:InvokeCommandAction Command="{x:Static vm:DialogBox.SetDialogType}" CommandParameter="{x:Type local:DialogView}"/>
        </b:EventTrigger>
        <b:EventTrigger EventName="Closing">
            <b:InvokeCommandAction Command="{Binding SaveData}"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>
    <Window.Resources>
        <Style x:Key="TabNotify.BrowserStyle" TargetType="{x:Type tab:TabNotify}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type tab:TabNotify}">
                        <DockPanel KeyboardNavigation.TabNavigation="Local">
                            <StackPanel x:Name="PART_StackTabHeader"  
                                        DockPanel.Dock="Top" 
                                        Orientation="Horizontal" 
                                        Height="40"
                                        Visibility="{TemplateBinding TabBarVisibility}"
                                        Margin="50 10 110 0">
                                <UniformGrid x:Name="CenteredHeaderPanel"  
                                                Rows="1"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Focusable="False" 
                                                IsItemsHost="True"  
                                                KeyboardNavigation.TabIndex="1"
                                                MaxWidth="{TemplateBinding ActualWidth, Converter={x:Static converters:DoublePlusParameterConverter.Default}, ConverterParameter=-200}" />
                                <Button Content="{md:PackIcon Kind=Plus}" 
                                        Style="{StaticResource MaterialDesignIconButton}" 
                                        Background="{DynamicResource Primary.Light}" 
                                        Foreground="{DynamicResource White.Dark}" 
                                        VerticalAlignment="Bottom" 
                                        Width="30"
                                        Height="30"
                                        Command="{Binding Source={x:Static vm:MainViewModel.Default}, Path=OpenNewTab}"
                                        Margin="10 2 0 2"/>
                            </StackPanel>
                            <Border x:Name="PART_BorderSelectedContent"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Panel.ZIndex="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Panel.ZIndex)}"
                                    Background="{x:Null}"
                                    Focusable="False">
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                    Margin="{TemplateBinding Padding}"
                                                    ContentSource="SelectedContent"
                                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                    Focusable="False"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
        </Style>
    </Window.Resources>
    <Grid>
        <!--Install-Package CefSharp.Wpf.NETCore -Version 111.2.20-->
        <!--https://github.com/cefsharp/CefSharp/wiki/Quick-Start-For-MS-.Net-5.0-or-greater-->

        <!--TabNotify.WindowState <=> Window.WindowState <=> MainViewModel.WindowState-->
        <!--TabNotify.TabBarVisibility <=> Window.TitleBar.TabBarVisibility-->
        
        <Border x:Name="borderTitle" VerticalAlignment="Top" 
                Background="{Binding ElementName=main, Path=BorderBrush}" 
                Visibility="{Binding ElementName=tabMain, Path=TabBarVisibility}">
            <b:Interaction.Triggers>
                <b:EventTrigger EventName="MouseDown">
                    <b:InvokeCommandAction Command="{Binding DragMove}"/>
                </b:EventTrigger>
            </b:Interaction.Triggers>
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="2 2 0 0"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=main, Path=WindowState}" Value="{x:Static WindowState.Maximized}">
                            <Setter Property="CornerRadius" Value="0"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Grid >
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
                    <StackPanel.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}">
                            <Setter Property="Foreground" Value="{DynamicResource White.Dark}"/>
                            <Setter Property="Width" Value="30"/>
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="Content" Value="{md:PackIcon Kind=CheckboxBlankOutline, Size=20}"/> 
                            <Setter Property="Margin" Value="3"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=main, Path=WindowState}" Value="{x:Static WindowState.Normal}">
                                    <Setter Property="Content" Value="{md:PackIcon Kind=CheckboxBlankOutline, Size=20}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=main, Path=WindowState}" Value="{x:Static WindowState.Maximized}">
                                    <Setter Property="Content" Value="{md:PackIcon Kind=CheckboxMultipleBlankOutline, Size=20}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Resources>
                    <Button Content="{md:PackIcon Kind=Minimize, Size=25}" Command="{Binding Minimize}" />
                    <Button Command="{Binding Maximize}" />
                    <Button Content="{md:PackIcon Kind=Power, Size=25}" Command="{Binding Close}" IsCancel="True" />
                </StackPanel>
                <Image x:Name="imageIcon" Source="pack://siteoforigin:,,,/Images/icon.png" HorizontalAlignment="Left" Height="40" Margin="5">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="RenderTransformOrigin" Value="0.5 0.5"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="0"/>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=tabMain, Path=IsLoading}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Name="beginRotateIcon">
                                            <Storyboard >
                                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle"
                                                                 From="0"
                                                                 To="360"
                                                                 Duration="0:0:1"
                                                                 RepeatBehavior="Forever"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="beginRotateIcon"/>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Grid>
        </Border>

        <tab:TabNotify x:Name="tabMain" Style="{StaticResource TabNotify.BrowserStyle}">
            <b:Interaction.Triggers>
                <b:EventTrigger EventName="SizeChanged">
                    <b:InvokeCommandAction Command="{Binding ResizeTab}" />
                </b:EventTrigger>
                <b:EventTrigger EventName="Loaded">
                    <b:InvokeCommandAction Command="{Binding OpenNewTab}" CommandParameter="about:blank"/>
                </b:EventTrigger>
            </b:Interaction.Triggers>
            <!--<tab:TabBrowserChromium Address="tuoitre.vn"/>-->
        </tab:TabNotify>
        
        <Border x:Name="borderExitFullscreen" VerticalAlignment="Top" Height="60" >
            <Button Content="{DynamicResource Button.ExitFullscreen}" FontWeight="Regular" FontSize="16" Foreground="{DynamicResource White.Dark}" Visibility="{Binding ElementName=borderExitFullscreen, Path=IsMouseOver, Converter={StaticResource BooleanToVisibility}}" Command="{Binding ElementName=tabMain, Path=Fullscreen}" CommandParameter="{Binding ElementName=borderTitle, Path=IsVisible}" Margin="100 0 100 0"/>
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Background" Value="Transparent"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=borderTitle, Path=Visibility}" Value="{x:Static Visibility.Visible}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Secondary.Light}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource Primary.Light}"/>
                            <Setter Property="BorderThickness" Value="0 0 0 1"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
    </Grid>
</Window>

